# Test code for the vmware_resource_pool module.
# Copyright: (c) 2017, Abhijeet Kasurde <akasurde@redhat.com>
# GNU General Public License v3.0+ (see COPYING or https://www.gnu.org/licenses/gpl-3.0.txt)

- import_role:
    name: prepare_vmware_tests
  vars:
    setup_attach_host: true
    setup_resource_pool: true

# Tests on cluster
- name: set the vmware_resource_pool module default values
  module_defaults:
    vmware_resource_pool:
      hostname: "{{ vcenter_hostname }}"
      username: "{{ vcenter_username }}"
      password: "{{ vcenter_password }}"
      validate_certs: false
      datacenter: "{{ dc1 }}"
      cluster: "{{ ccr1 }}"

  block:
    - name: add resource pool with check_mode
      vmware_resource_pool:
        resource_pool: test_resource_001
      check_mode: true
      register: resource_result_001

    - assert:
        that:
          - resource_result_001.changed is sameas true

    - name: add resource pool
      vmware_resource_pool:
        resource_pool: test_resource_001
      register: resource_result_002

    - assert:
        that:
          - resource_result_002.changed is sameas true
          - resource_result_002.resource_pool_config is defined
          - resource_result_002.resource_pool_config.name == "test_resource_001"

    - name: add resource pool(idempotency check)
      vmware_resource_pool:
        resource_pool: test_resource_001
      register: resource_result_003

    - assert:
        that:
          - resource_result_003.changed is sameas false

    - name: change resource pool config with the custom default value and check_mode
      vmware_resource_pool:
        resource_pool: test_resource_001
        mem_shares: custom
        cpu_shares: custom
      check_mode: true
      register: resource_result_004

    - assert:
        that:
          - resource_result_004.changed is sameas true

    - name: change resource pool config with the custom default value
      vmware_resource_pool:
        resource_pool: test_resource_001
        mem_shares: custom
        cpu_shares: custom
      register: resource_result_005

    - assert:
        that:
          - resource_result_005.changed is sameas true
          - resource_result_005.resource_pool_config is defined
          - resource_result_005.resource_pool_config.cpuAllocation.shares.level == 'custom'
          - resource_result_005.resource_pool_config.cpuAllocation.shares.shares == 4000
          - resource_result_005.resource_pool_config.memoryAllocation.shares.level == 'custom'
          - resource_result_005.resource_pool_config.memoryAllocation.shares.shares == 163840

    - name: change resource pool config with the custom default value(idempotency check)
      vmware_resource_pool:
        resource_pool: test_resource_001
        mem_shares: custom
        cpu_shares: custom
      register: resource_result_006

    - assert:
        that:
          - resource_result_006.changed is sameas false
          - resource_result_006.resource_pool_config is defined

    - name: change resource pool config with the allocation_shares
      vmware_resource_pool:
        resource_pool: test_resource_001
        mem_shares: custom
        mem_allocation_shares: 1000
        cpu_shares: custom
        cpu_allocation_shares: 1000
      register: resource_result_007

    - assert:
        that:
          - resource_result_007.changed is sameas true
          - resource_result_007.resource_pool_config is defined
          - resource_result_007.resource_pool_config.cpuAllocation.shares.level == 'custom'
          - resource_result_007.resource_pool_config.cpuAllocation.shares.shares == 1000
          - resource_result_007.resource_pool_config.memoryAllocation.shares.level == 'custom'
          - resource_result_007.resource_pool_config.memoryAllocation.shares.shares == 1000

    - name: change resource pool config with the allocation_shares(idempotency check)
      vmware_resource_pool:
        resource_pool: test_resource_001
        mem_shares: custom
        mem_allocation_shares: 1000
        cpu_shares: custom
        cpu_allocation_shares: 1000
      register: resource_result_008

    - assert:
        that:
          - resource_result_008.changed is sameas false
          - resource_result_008.resource_pool_config is defined

    - name: change resource pool config with some option and check_mode
      vmware_resource_pool:
        resource_pool: test_resource_001
        mem_shares: normal
        mem_limit: 1
        mem_reservation: 1
        mem_expandable_reservations: false
        cpu_shares: normal
        cpu_limit: 1
        cpu_reservation: 1
        cpu_expandable_reservations: false
      check_mode: true
      register: resource_result_009

    - assert:
        that:
          - resource_result_009.changed is sameas true

    - name: change resource pool config with some option
      vmware_resource_pool:
        resource_pool: test_resource_001
        mem_shares: normal
        mem_limit: 1
        mem_reservation: 1
        mem_expandable_reservations: false
        cpu_shares: normal
        cpu_limit: 1
        cpu_reservation: 1
        cpu_expandable_reservations: false
      register: resource_result_010

    - assert:
        that:
          - resource_result_010.changed is sameas true
          - resource_result_010.resource_pool_config is defined
          - resource_result_010.resource_pool_config.cpuAllocation.shares.level == 'normal'
          - resource_result_010.resource_pool_config.cpuAllocation.limit == 1
          - resource_result_010.resource_pool_config.cpuAllocation.reservation == 1
          - resource_result_010.resource_pool_config.cpuAllocation.expandableReservation is sameas false
          - resource_result_010.resource_pool_config.memoryAllocation.shares.level == 'normal'
          - resource_result_010.resource_pool_config.memoryAllocation.limit == 1
          - resource_result_010.resource_pool_config.memoryAllocation.reservation == 1
          - resource_result_010.resource_pool_config.memoryAllocation.expandableReservation is sameas false

    - name: change resource pool config with some option(idempotency check)
      vmware_resource_pool:
        resource_pool: test_resource_001
        mem_shares: normal
        mem_limit: 1
        mem_reservation: 1
        mem_expandable_reservations: false
        cpu_shares: normal
        cpu_limit: 1
        cpu_reservation: 1
        cpu_expandable_reservations: false
      register: resource_result_011

    - assert:
        that:
          - resource_result_011.changed is sameas false
          - resource_result_011.resource_pool_config is defined

    - name: remove resource pool with check_mode
      vmware_resource_pool:
        resource_pool: test_resource_001
        state: absent
      check_mode: true
      register: resource_result_012

    - assert:
        that:
          - resource_result_012.changed is sameas true

    - name: remove resource pool
      vmware_resource_pool:
        resource_pool: test_resource_001
        state: absent
      register: resource_result_013

    - assert:
        that:
          - resource_result_013.changed is sameas true
          - resource_result_013.resource_pool_config is defined

    - name: remove resource pool(idempotency check)
      vmware_resource_pool:
        resource_pool: test_resource_001
        state: absent
      register: resource_result_014

    - assert:
        that:
          - resource_result_014.changed is sameas false
          - resource_result_014.resource_pool_config is defined

# Tests on ESXi host
- name: set the vmware_resource_pool module default values without cluster parameter
  module_defaults:
    vmware_resource_pool:
      hostname: "{{ vcenter_hostname }}"
      username: "{{ vcenter_username }}"
      password: "{{ vcenter_password }}"
      validate_certs: false
      datacenter: "{{ dc1 }}"
      esxi_hostname: "{{ esxi2 }}"

  block:
    # Remove ESXi host from cluster for tests
    - name: Enter maintenance mode
      vmware.vmware.esxi_maintenance_mode:
        hostname: "{{ vcenter_hostname }}"
        username: "{{ vcenter_username }}"
        password: "{{ vcenter_password }}"
        validate_certs: false
        esxi_host_name: "{{ esxi2 }}"
        enable_maintenance_mode: true

    - name: Remove ESXi
      vmware.vmware.esxi_host:
        hostname: "{{ vcenter_hostname }}"
        username: "{{ vcenter_username }}"
        password: "{{ vcenter_password }}"
        validate_certs: false
        datacenter: "{{ dc1 }}"
        esxi_host_name: "{{ esxi2 }}"
        state: absent

    - name: Re-add ESXi outside of cluster
      vmware.vmware.esxi_host:
        hostname: "{{ vcenter_hostname }}"
        username: "{{ vcenter_username }}"
        password: "{{ vcenter_password }}"
        validate_certs: false
        datacenter: "{{ dc1 }}"
        folder: "{{ dc1 }}/host"
        esxi_host_name: "{{ esxi2 }}"
        esxi_username: '{{ esxi_user }}'
        esxi_password: '{{ esxi_password }}'
        state: present

    - name: Exit maintenance mode
      vmware.vmware.esxi_maintenance_mode:
        hostname: "{{ vcenter_hostname }}"
        username: "{{ vcenter_username }}"
        password: "{{ vcenter_password }}"
        validate_certs: false
        esxi_host_name: "{{ esxi2 }}"
        enable_maintenance_mode: false

    - name: add resource pool to ESXi with check_mode
      vmware_resource_pool:
        resource_pool: test_resource_015
      check_mode: true
      register: resource_result_015

    - assert:
        that:
          - resource_result_015.changed is sameas true

    - name: add resource pool to ESXi
      vmware_resource_pool:
        resource_pool: test_resource_015
      register: resource_result_016

    - assert:
        that:
          - resource_result_016.changed is sameas true

    - name: add resource pool to ESXi(idempotency check)
      vmware_resource_pool:
        resource_pool: test_resource_015
      register: resource_result_017

    - assert:
        that:
          - resource_result_017.changed is sameas false

    - name: change resource pool config with the custom default value and check_mode
      vmware_resource_pool:
        resource_pool: test_resource_015
        mem_shares: custom
        cpu_shares: custom
      check_mode: true
      register: resource_result_018

    - assert:
        that:
          - resource_result_018.changed is sameas true

    - name: change resource pool config with the custom default value
      vmware_resource_pool:
        resource_pool: test_resource_015
        mem_shares: custom
        cpu_shares: custom
      register: resource_result_019

    - assert:
        that:
          - resource_result_019.changed is sameas true
          - resource_result_019.resource_pool_config is defined
          - resource_result_019.resource_pool_config.cpuAllocation.shares.level == 'custom'
          - resource_result_019.resource_pool_config.cpuAllocation.shares.shares == 4000
          - resource_result_019.resource_pool_config.memoryAllocation.shares.level == 'custom'
          - resource_result_019.resource_pool_config.memoryAllocation.shares.shares == 163840

    - name: remove resource pool from ESXi with check_mode
      vmware_resource_pool:
        resource_pool: test_resource_015
        state: absent
      check_mode: true
      register: resource_result_020

    - assert:
        that:
          - resource_result_020.changed is sameas true

    - name: remove resource pool from ESXi
      vmware_resource_pool:
        resource_pool: test_resource_015
        state: absent
      register: resource_result_021

    - assert:
        that:
          - resource_result_021.changed is sameas true

    - name: remove resource pool from ESXi(idempotency check)
      vmware_resource_pool:
        resource_pool: test_resource_015
        state: absent
      register: resource_result_023

    - assert:
        that:
          - resource_result_023.changed is sameas false

- name: set the vmware_resource_pool module default values without cluster and esxi_hostnamme parameter
  module_defaults:
    vmware_resource_pool:
      hostname: "{{ vcenter_hostname }}"
      username: "{{ vcenter_username }}"
      password: "{{ vcenter_password }}"
      validate_certs: false
      datacenter: "{{ dc1 }}"
      parent_resource_pool: DC0_C0_RP1

  block:
    - name: add resource pool to Parent Resource Pool with check_mode
      vmware_resource_pool:
        resource_pool: test_resource_024
      check_mode: true
      register: resource_result_024

    - assert:
        that:
          - resource_result_024.changed is sameas true

    - name: add resource pool to Parent Resource Pool
      vmware_resource_pool:
        resource_pool: test_resource_024
      register: resource_result_025

    - assert:
        that:
          - resource_result_025.changed is sameas true

    - name: add resource pool to Parent Resource Pool(idempotency check)
      vmware_resource_pool:
        resource_pool: test_resource_024
      register: resource_result_026

    - assert:
        that:
          - resource_result_026.changed is sameas false

    - name: change resource pool config with the custom default value and check_mode
      vmware_resource_pool:
        resource_pool: test_resource_024
        mem_shares: custom
        cpu_shares: custom
      check_mode: true
      register: resource_result_027

    - assert:
        that:
          - resource_result_027.changed is sameas true

    - name: change resource pool config with the custom default value
      vmware_resource_pool:
        resource_pool: test_resource_024
        mem_shares: custom
        cpu_shares: custom
      register: resource_result_028

    - assert:
        that:
          - resource_result_028.changed is sameas true
          - resource_result_028.resource_pool_config is defined
          - resource_result_028.resource_pool_config.cpuAllocation.shares.level == 'custom'
          - resource_result_028.resource_pool_config.cpuAllocation.shares.shares == 4000
          - resource_result_028.resource_pool_config.memoryAllocation.shares.level == 'custom'
          - resource_result_028.resource_pool_config.memoryAllocation.shares.shares == 163840

    - name: remove resource pool from Parent Resource Pool with check_mode
      vmware_resource_pool:
        resource_pool: test_resource_024
        state: absent
      check_mode: true
      register: resource_result_029

    - assert:
        that:
          - resource_result_029.changed is sameas true

    - name: remove resource pool from Parent Resource Pool
      vmware_resource_pool:
        resource_pool: test_resource_024
        state: absent
      register: resource_result_030

    - assert:
        that:
          - resource_result_030.changed is sameas true

    - name: remove resource pool from Parent Resource Pool(idempotency check)
      vmware_resource_pool:
        resource_pool: test_resource_024
        state: absent
      register: resource_result_031

    - assert:
        that:
          - resource_result_031.changed is sameas false
